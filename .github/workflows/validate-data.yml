name: Validate Data Sheet

on:
  push:
    paths:
      - 'data/*.csv'
      - 'data/*.json'
      - 'data/*.xlsx'
      - 'data/*.xls'
  pull_request:
    paths:
      - 'data/*.csv'
      - 'data/*.json'
      - 'data/*.xlsx'
      - 'data/*.xls'

permissions:
  contents: write

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch full history to ensure we have access to previous commits

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.0.0'

      - name: Install dependencies
        run: |
          cd validation
          npm install

      - name: Run validation and revert on failure
        run: |
          cd validation
          if ! node validate.js; then
            echo "Validation failed. Reverting only data file changes..."
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            
            # Debug: Show current commit info
            echo "Current commit: $(git rev-parse HEAD)"
            echo "Previous commit: $(git rev-parse HEAD^)"
            
            # Find data files that were changed in the last commit
            # Use extended regex (-E) to support alternation with |
            DATA_FILES=$(git diff --name-only HEAD^ HEAD | grep -E '^data/.*\.(csv|json|xlsx|xls)$' || true)
            
            if [ -z "$DATA_FILES" ]; then
              echo "No data files (CSV, JSON, XLSX, XLS) found in data folder in last commit"
              # Show all files that changed for debugging
              echo "Files changed in last commit:"
              git diff --name-only HEAD^ HEAD
              exit 1
            fi
            
            echo "Reverting these data files:"
            echo "$DATA_FILES"
            
            # Revert only the data files to their previous state
            for file in $DATA_FILES; do
              echo "Processing $file"
              
              # Debug: Check if file exists in current commit
              if [ -f "$file" ]; then
                echo "✓ File exists in working directory: $file"
                file_status="modified"
              else
                echo "✗ File does not exist in working directory: $file"
                file_status="deleted"
              fi
              
              # Debug: Check if file exists in previous commit
              if git cat-file -e HEAD^:"$file" 2>/dev/null; then
                echo "✓ File exists in previous commit: $file"
                
                if [ "$file_status" = "deleted" ]; then
                  echo "File was deleted - restoring from previous commit"
                  # For deleted files, we need to restore them differently
                  git show HEAD^:"$file" > "$file"
                  git add "$file"
                else
                  echo "File was modified - reverting to previous version"
                  git checkout HEAD^ -- "$file"
                fi
              else
                echo "✗ File does not exist in previous commit: $file"
                echo "File is newly added - removing it"
                git rm "$file" 2>/dev/null || rm -f "$file"
              fi
            done
            
            # Commit the reverted/removed data files
            if git diff --staged --quiet; then
              echo "No changes to commit after reversion"
            else
              git add data/*.csv data/*.json data/*.xlsx data/*.xls logs/* 2>/dev/null || true
              git commit -m "Revert data files due to validation failure"
              git push origin HEAD
            fi
            exit 1  # Fail the workflow
          fi